{"version":3,"sources":["apis/auth/auth.api.ts","components/navbar/Navbar.tsx","components/global-modals/login/login-modal.actions.js","components/breadcrumbs/Breadcrumbs.tsx","components/global-modals/login/Login.tsx","components/global-modals/GlobalModals.tsx","components/home/Home.tsx","components/get-help/GetHelp.tsx","components/volunteer/Volunteer.tsx","components/manage-requests/manage-request-page/create-requests/CreateRequests.tsx","components/manage-requests/manage-request-page/request-table-list/RequestTableList.tsx","components/manage-requests/manage-request-page/ManageRequests.tsx","components/manage-requests/create-request-page/CreateRequestPage.tsx","components/navbar/nav-manager.ts","components/root/AppRoot.tsx","components/global-modals/login/login-modal.reducers.ts","apis/auth/auth.reducers.ts","store/index.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["activeAccount","AppNavbar","this","props","hasLogin","openLoginModal","bg","expand","Brand","as","NavLink","to","Toggle","aria-controls","Collapse","id","Nav","className","Fragment","Link","Form","inline","Button","onClick","variant","Component","connect","state","auth","type","AppBreadcrumb","goTo","showBreadcrumbs","params","Breadcrumb","_","map","value","idx","isLastElement","length","Item","active","key","withRouter","omitBy","match","isUndefined","size","values","history","push","fakeUserList","isLogin","delayPromise","ms","Promise","resolve","setTimeout","LoginModal","setState","hasError","isLoading","event","username","target","password","console","log","then","Math","random","reject","errorMessage","find","hideLoginModal","onLogin","bind","catch","error","finally","show","Modal","onHide","dialogClassName","animation","aria-labelledby","centered","Header","closeButton","Title","Body","Alert","Group","controlId","Label","Control","disabled","placeholder","onChange","handleUsernameChange","handlePasswordChange","Footer","login","Spinner","role","aria-hidden","globalModals","GlobalModals","Home","GetHelp","Volunteer","Jumbotron","RequestTableList","Table","striped","bordered","hover","MyRequests","CreateRequests","CreateRequestPage","custom","href","location","Check","label","Col","sm","name","rows","style","display","float","htmlFor","width","PUBLIC_NAV_STATE","home","volunteer","PROTECTED_NAV_STATE","getDisplayComponentForNav","navId","subNavId","navState","defaultTo","component","navManager","path","loginModalReducers","action","newState","authReducers","appReducers","combineReducers","store","createStore","applyMiddleware","logger","App","AppRoot","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.c0882255.chunk.js","sourcesContent":["import _ from 'lodash';\nimport { Account } from '../../dto/account/account';\n\nconst fakeUserList: Account[] = [];\nlet isLogin: boolean = false;\nlet activeAccount: Account;\n\nexport function createAccount({ password, username }): Promise<Account> {\n  if (!isLogin) {\n    return delayPromise(2000).then(() => {\n      if (Math.random() > 0.8) {\n        return Promise.reject({\n          errorMessage: 'Fails to create account',\n        });\n      }\n\n      isLogin = true;\n      activeAccount = new Account({\n        username,\n        password,\n      });\n      fakeUserList.push(activeAccount);\n      return activeAccount;\n    });\n  }\n\n  return Promise.resolve(activeAccount);\n}\n\nexport function login({ username, password }): Promise<Account> {\n  console.log('Requesting to login', username, password);\n  if (!isLogin) {\n    return delayPromise(2000).then(() => {\n      if (Math.random() > 0.8) {\n        return Promise.reject({\n          errorMessage: 'Fails to log in',\n        });\n      }\n      isLogin = true;\n      activeAccount = _.find(fakeUserList, { username });\n      console.log('Successfully loggin in');\n      return activeAccount;\n    });\n  }\n\n  return Promise.resolve(activeAccount);\n}\n\nfunction delayPromise(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n","import React, { Component } from 'react';\n\nimport './Navbar.css';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { openLoginModal } from '../global-modals/login/login-modal.actions';\n\ninterface ILoginModalProps {\n  hasLogin?: boolean;\n  openLoginModal?(): any;\n}\n\nclass AppNavbar extends Component<ILoginModalProps> {\n  render() {\n    const { hasLogin, openLoginModal } = this.props;\n    return (\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand as={NavLink} to=\"/\">\n          COVID-19 Mutual Aid\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            {!hasLogin && (\n              <React.Fragment>\n                <Nav.Link as={NavLink} to=\"/\">\n                  Home\n                </Nav.Link>\n                <Nav.Link as={NavLink} to=\"/get-help\">\n                  Get help\n                </Nav.Link>\n                <Nav.Link as={NavLink} to=\"/volunteer\">\n                  Get involved\n                </Nav.Link>\n              </React.Fragment>\n            )}\n\n            {hasLogin && (\n              <Nav.Link as={NavLink} to=\"/my-requests\">\n                Manage requests\n              </Nav.Link>\n            )}\n          </Nav>\n        </Navbar.Collapse>\n        <Form inline>\n          {!hasLogin && (\n            <Button\n              className=\"LoginButton\"\n              onClick={openLoginModal}\n              variant=\"outline-secondary\"\n            >\n              Login\n            </Button>\n          )}\n\n          {hasLogin && <div className=\"LoginButton\">Welcome back!</div>}\n\n          <Button variant=\"info\">Donate</Button>\n        </Form>\n      </Navbar>\n    );\n  }\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n    hasLogin: state.auth.hasLogin || false,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  openLoginModal,\n})(AppNavbar);\n","export const openLoginModal = () => ({\n  type: 'OPEN_LOGIN_MODAL',\n});\n\nexport const hideLoginModal = () => ({\n  type: 'HIDE_LOGIN_MODAL',\n});\n\nexport const onLogin = () => ({\n  type: 'SUCCESSFULLY_LOG_IN',\n});\n","import React, { Component } from 'react';\n\nimport _ from 'lodash';\nimport './Breadcrumbs.css';\nimport Breadcrumb from 'react-bootstrap/Breadcrumb';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\n\ninterface IAppBreadcrumb {\n  goTo(newRoute: string): any;\n  params: String[];\n  showBreadcrumbs?: boolean;\n}\n\nclass AppBreadcrumb extends Component<IAppBreadcrumb> {\n  render() {\n    const { goTo, showBreadcrumbs, params } = this.props;\n\n    return (\n      showBreadcrumbs && (\n        <Breadcrumb className=\"my-breadcrumb\">\n          {_.map(params, function (value, idx) {\n            const isLastElement = idx === params.length - 1;\n            return (\n              <Breadcrumb.Item\n                active={isLastElement}\n                onClick={() => {\n                  if (!isLastElement) {\n                    goTo('/' + value);\n                  }\n                }}\n                key={value}\n              >\n                {value}\n              </Breadcrumb.Item>\n            );\n          })}\n        </Breadcrumb>\n      )\n    );\n  }\n}\n\nconst mapStateToProps = (state, props) => {\n  const params = _.omitBy(props.match.params, _.isUndefined);\n  return {\n    showBreadcrumbs: _.size(params) > 1,\n    params: _.values(params),\n    goTo: props.history.push,\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(AppBreadcrumb));\n","import React, { Component } from 'react';\n\nimport './Login.css';\n\nimport { connect } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Modal from 'react-bootstrap/Modal';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { hideLoginModal, onLogin } from './login-modal.actions';\nimport Alert from 'react-bootstrap/Alert';\nimport * as auth from '../../../apis/auth/auth.api';\nimport { withRouter } from 'react-router';\n\ninterface ILoginModalProps {\n  show?: boolean;\n  goTo?(): any;\n  hideLoginModal?(): any;\n  onLogin?(): any;\n}\n\ninterface ILoginModalState {\n  hasError?: boolean;\n  isLoading?: boolean;\n  password?: string;\n  username?: string;\n}\n\nclass LoginModal extends Component<ILoginModalProps, ILoginModalState> {\n  componentDidMount() {\n    this.setState({\n      hasError: false,\n      isLoading: false,\n    });\n  }\n\n  handleUsernameChange(event) {\n    this.setState({\n      username: event.target.value,\n    });\n  }\n\n  handlePasswordChange(event) {\n    this.setState({\n      password: event.target.value,\n    });\n  }\n\n  login() {\n    this.setState({\n      hasError: false,\n      isLoading: true,\n    });\n\n    auth\n      .login({\n        password: this.state.password,\n        username: this.state.username,\n      })\n      .then(onSuccess.bind(this))\n      .catch((error) => {\n        this.setState({\n          hasError: true,\n          isLoading: false,\n        });\n      })\n      .finally(() => {\n        this.setState({\n          isLoading: false,\n        });\n      });\n\n    function onSuccess(this: any) {\n      this.props.hideLoginModal();\n      this.props.onLogin();\n      this.props.goTo('/my-requests');\n    }\n  }\n\n  render() {\n    if (this.props.show) {\n      const { show, hideLoginModal } = this.props;\n      return (\n        <Modal\n          show={show}\n          onHide={hideLoginModal}\n          dialogClassName=\"modal-50w\"\n          animation={false}\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n        >\n          <Modal.Header closeButton>\n            <Modal.Title id=\"contained-modal-title-vcenter\">\n              Log in with your Username\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            {this.state.hasError && (\n              <Alert variant=\"danger\">Failed to login. Please retry!</Alert>\n            )}\n            <Form>\n              <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label>Username</Form.Label>\n                <Form.Control\n                  disabled={this.state.isLoading}\n                  type=\"email\"\n                  placeholder=\"Enter username\"\n                  onChange={this.handleUsernameChange.bind(this)}\n                />\n              </Form.Group>\n              <Form.Group controlId=\"formBasicPassword\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  disabled={this.state.isLoading}\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  onChange={this.handlePasswordChange.bind(this)}\n                />\n              </Form.Group>\n            </Form>\n          </Modal.Body>\n          <Modal.Footer>\n            {!this.state.isLoading && (\n              <div>\n                <Button variant=\"outline-secondary\" onClick={hideLoginModal}>\n                  Cancel\n                </Button>\n                <Button variant=\"primary\" onClick={this.login.bind(this)}>\n                  Login\n                </Button>\n              </div>\n            )}\n\n            {this.state.isLoading && (\n              <Button variant=\"primary\" disabled>\n                <Spinner\n                  as=\"span\"\n                  animation=\"grow\"\n                  size=\"sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                />\n                Loading...\n              </Button>\n            )}\n          </Modal.Footer>\n        </Modal>\n      );\n    }\n    return null;\n  }\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n    show: state.globalModals.show,\n    goTo: props.history.push,\n  };\n};\n\nexport default withRouter(\n  connect(mapStateToProps, {\n    hideLoginModal,\n    onLogin,\n  })(LoginModal)\n);\n","import React from 'react';\n\nimport LoginModal from './login/Login';\n\nconst GlobalModals = () => (\n  <div>\n    <LoginModal />\n  </div>\n);\n\nexport default GlobalModals;\n","import React from 'react';\n\nconst Home = () => <div>This is home! Hello world!</div>;\n\nexport default Home;\n","import React from 'react';\n\nconst GetHelp = () => <div>This is GetHelp</div>;\n\nexport default GetHelp;\n","import React from 'react';\n\nconst Volunteer = () => <div>This is volunteer</div>;\n\nexport default Volunteer;\n","import React from 'react';\n\nimport Button from 'react-bootstrap/Button';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\n\nconst RequestTableList = ({ goTo }) => (\n  <Jumbotron>\n    <h1>Hello!</h1>\n    <p>We are here to support you!</p>\n    <p>\n      <Button\n        onClick={() => goTo('/my-requests/create-request')}\n        variant=\"primary\"\n      >\n        Submit a request\n      </Button>\n    </p>\n  </Jumbotron>\n);\n\nconst mapStateToProps = (state, props) => {\n  return {\n    goTo: props.history.push,\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(RequestTableList));\n","import React from 'react';\n\nimport Table from 'react-bootstrap/Table';\n\nconst RequestTableList = () => (\n  <React.Fragment>\n    <h3>Requests</h3>\n    <Table striped bordered hover size=\"sm\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>First Name</th>\n          <th>Last Name</th>\n          <th>Username</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr onClick={() => console.log('click on the request')}>\n          <td>1</td>\n          <td>Mark</td>\n          <td>Otto</td>\n          <td>@mdo</td>\n        </tr>\n        <tr>\n          <td>2</td>\n          <td>Jacob</td>\n          <td>Thornton</td>\n          <td>@fat</td>\n        </tr>\n        <tr>\n          <td>3</td>\n          <td>Larry the Bird</td>\n          <td>Larry the Bird 2</td>\n          <td>@twitter</td>\n        </tr>\n      </tbody>\n    </Table>\n  </React.Fragment>\n);\n\nexport default RequestTableList;\n","import React from 'react';\n\nimport CreateRequests from './create-requests/CreateRequests';\nimport RequestTableList from './request-table-list/RequestTableList';\n\nconst MyRequests = () => (\n  <div>\n    <CreateRequests />\n    <RequestTableList />\n  </div>\n);\n\nexport default MyRequests;\n","import React from 'react';\n\nimport './CreateRequestPage.css';\nimport { Button, Form, Col } from 'react-bootstrap';\n\nconst CreateRequestPage = () => {\n  const locations = [\n    'Algona Pacific',\n    'Auburn',\n    'Bellevue',\n    'Bothell',\n    'Burien',\n    'Convington',\n    'Des Moines',\n    'Duvall',\n    'Fall City',\n    'Federal Way',\n    'High Line',\n    'Issaquah',\n    'Kenmore',\n    'Kent',\n    'Kirkland',\n    'Maple Valley',\n    'Newcastle',\n    'Normandy Park',\n    'North Bend',\n    'Puyallup',\n    'Redmond',\n    'Renton',\n    'Sammamish',\n    'Snoqualmie',\n    'Summer',\n    'Tukwila',\n    'White Center',\n    'Woodinville',\n  ];\n  return (\n    <React.Fragment>\n      <h3 className=\"create-your-request-title\">Create your requests</h3>\n      <Form className=\"create-request-form\">\n        <Form.Group controlId=\"contact\">\n          <Form.Label>\n            What would be the quickest method of reaching you?{' '}\n          </Form.Label>\n          <Form.Control as=\"select\" className=\"my-1 mr-sm-2\" custom>\n            <option value=\"0\">Choose...</option>\n            <option value=\"1\">Phone Number - Call</option>\n            <option value=\"2\">Phone Number - Text</option>\n            <option value=\"3\">Three</option>\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"location\">\n          <Form.Label>\n            This form is for South King County & Eastside. If you're in Seattle,\n            please complete this form:\n            <a href=\"https://docs.google.com/forms/d/1rOkXW6ElVT0MH9oSI-TuW8L5szCt-ULbZhWebARRZNI/viewform\">\n              https://docs.google.com/forms/d/1rOkXW6ElVT0MH9oSI-TuW8L5szCt-ULbZhWebARRZNI/viewform\n            </a>\n            ). Where in South King County or Eastside are you located?\n          </Form.Label>\n          {locations.map(function (location) {\n            return (\n              <Form.Check key={location} type=\"checkbox\" label={location} />\n            );\n          })}\n        </Form.Group>\n\n        <Form.Group controlId=\"Address\">\n          <Form.Label>\n            What is your address? (Address, City, State, ZIP Code)\n          </Form.Label>\n          <Form.Control placeholder=\"Your answer\" />\n        </Form.Group>\n\n        <Form.Group controlId=\"Redirect-Request\">\n          <Form.Label>\n            If you live outside of our service area, can we send your request\n            details to another local mutual aid organization who we trust?\n          </Form.Label>\n          <p>\n            If you say yes, it will be will be faster and simpler to get you\n            your delivery! If you say no and you live outside of our range, we\n            will let you know that we can't help you and tell you where to go to\n            find help for your location, which may take a while, and then you\n            will have to fill out another group's form and begin the whole\n            process again from scratch. (We will never share your information\n            with advertisers, political candidates or parties, corporations, or\n            the government.)\n          </p>\n          <Col sm={10}>\n            <Form.Check\n              type=\"radio\"\n              label=\"Yes\"\n              name=\"redirect-request\"\n              id=\"yes\"\n            />\n            <Form.Check\n              type=\"radio\"\n              label=\"No\"\n              name=\"redirect-request\"\n              id=\"no\"\n            />\n          </Col>\n        </Form.Group>\n\n        <Form.Group controlId=\"food\">\n          <Form.Label>\n            What would be the quickest method of reaching you?{' '}\n          </Form.Label>\n          <Form.Check type=\"checkbox\" label=\"Ingredients to cook with\" />\n          <Form.Check type=\"checkbox\" label=\"Reheat and serve/frozen\" />\n          <Form.Check\n            type=\"checkbox\"\n            label=\"Low Prep (like sandwiches, pasta)\"\n          />\n          <Form.Check type=\"checkbox\" label=\"Zero - Prep\" />\n        </Form.Group>\n\n        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n          <Form.Label>Example textarea</Form.Label>\n          <Form.Control as=\"textarea\" rows={3} />\n        </Form.Group>\n\n        <Form.Group controlId=\"food-details\">\n          <Form.Label>\n            We are on a volunteer basis and actively fundraising. At this moment\n            we are set up to prioritize delivering ONLY ESSENTIAL/URGENT/\n            IMMEDIATE needs of our community members. What are the essential/\n            urgent items you need?\n          </Form.Label>\n          <p>\n            Items can be general like \"milk,\" or specific like \"a 24-pack of the\n            purple Always brand overnight menstrual pads with wings.\" We will do\n            our best to match your requests, but if we can't find something\n            specific we may get you a similar substitute. We trust you to know\n            your needs and we are committed to delivery without judgement.\n          </p>\n          <Form.Control placeholder=\"Your answer\" />\n        </Form.Group>\n\n        <Form.Group controlId=\"allergies\">\n          <Form.Label>\n            Do you have any restrictions, allergies or intolerances? If there\n            are no allergies/ restrictions, enter none.\n          </Form.Label>\n          <Form.Control placeholder=\"Your answer\" />\n        </Form.Group>\n\n        <Form.Group controlId=\"household-size\">\n          <Form.Label>How many individuals are in your household?</Form.Label>\n          <Form.Control placeholder=\"Your answer\" />\n        </Form.Group>\n\n        <Form.Group controlId=\"Urgency\">\n          <Form.Label>\n            How urgent is your need? Please allow us 48 hours to respond to your\n            request.\n          </Form.Label>\n          <Col sm={10}>\n            <Form.Check\n              type=\"radio\"\n              label=\"In the next 72 hours\"\n              name=\"urgency\"\n              id=\"72hours\"\n            />\n            <Form.Check\n              type=\"radio\"\n              label=\"Over the next few days\"\n              name=\"urgency\"\n              id=\"fewdays\"\n            />\n            <Form.Check\n              type=\"radio\"\n              label=\"Useful if available\"\n              name=\"urgency\"\n              id=\"anytime\"\n            />\n          </Col>\n        </Form.Group>\n\n        <Form.Group controlId=\"Delivery-Support\">\n          <Form.Label>\n            Would you like financial support with your delivery?\n          </Form.Label>\n          <p>\n            We can fund supplies up to a certain amount per request (While\n            funding lasts) for folks who are quarantined without pay, sick,\n            disabled, elderly, undocumented, queer, Black, Indigenous, and/or\n            people of color.\n          </p>\n          <Col sm={10}>\n            <Form.Check\n              className=\"link-radio\"\n              type=\"radio\"\n              name=\"delivery-support\"\n              id=\"pay-donate\"\n              style={{ display: 'inline-block', float: 'left' }}\n            />\n            <label htmlFor=\"pay-donate\" style={{ width: '80%' }}>\n              Pay with your own money and donate to support your community\n              members:{' '}\n              <a href=\"https://www.gofundme.com/f/covid19-eastside-survival-fund\">\n                https://www.gofundme.com/f/covid19-eastside-survival-fund\n              </a>\n            </label>\n            <Form.Check\n              type=\"radio\"\n              label=\"Pay with your own money (coordinate with delivery person)\"\n              name=\"delivery-support\"\n              id=\"pay\"\n            />\n            <Form.Check\n              type=\"radio\"\n              label=\"Request support with your delivery items\"\n              name=\"delivery-support\"\n              id=\"need-support\"\n            />\n          </Col>\n        </Form.Group>\n\n        <Form.Group controlId=\"Social-Privileges\">\n          <Form.Label>\n            Can you tell us about your social location, privileges you do or\n            don’t have, whether you are Black, Indigenous, Person of Color\n            (BIPOC), identify as a survivor of domestic or sexual violence, etc.\n          </Form.Label>\n          <Form.Control placeholder=\"Your answer\" />\n        </Form.Group>\n\n        <Form.Group controlId=\"Share-Contact\">\n          <Form.Label>\n            Is it okay to share your contact number, address, and grocery list\n            with the volunteer who is doing the delivery?\n          </Form.Label>\n          <Col sm={10}>\n            <Form.Check\n              type=\"radio\"\n              label=\"Yes\"\n              name=\"share-contact\"\n              id=\"yes\"\n            />\n            <Form.Check type=\"radio\" label=\"No\" name=\"share-contact\" id=\"no\" />\n          </Col>\n        </Form.Group>\n\n        <Form.Group controlId=\"Share-Contact\">\n          <Form.Label>\n            Is it okay to share your contact number, address, and grocery list\n            with the volunteer who is doing the delivery?\n          </Form.Label>\n          <Col sm={10}>\n            <Form.Check\n              type=\"radio\"\n              label=\"Yes\"\n              name=\"share-contact\"\n              id=\"yes\"\n            />\n            <Form.Check type=\"radio\" label=\"No\" name=\"share-contact\" id=\"no\" />\n          </Col>\n        </Form.Group>\n\n        <Form.Group controlId=\"Checkin\">\n          <Form.Label>\n            Would you like us to check in via text or call every few weeks to\n            support you in your health and wellbeing?\n          </Form.Label>\n          <Col sm={10}>\n            <Form.Check\n              type=\"radio\"\n              label=\"Yes, by text\"\n              name=\"checkin\"\n              id=\"text\"\n            />\n            <Form.Check\n              type=\"radio\"\n              label=\"Yes, by phone\"\n              name=\"checkin\"\n              id=\"phone\"\n            />\n            <Form.Check\n              type=\"radio\"\n              label=\"No, thank you\"\n              name=\"checkin\"\n              id=\"no\"\n            />\n          </Col>\n        </Form.Group>\n\n        <Form.Group controlId=\"Question\">\n          <Form.Label>\n            Are there things you would like us to know? (any support or\n            resources you would like to offer, questions, comments, concerns).\n          </Form.Label>\n          <Form.Control placeholder=\"Your answer\" />\n        </Form.Group>\n\n        <Form.Group controlId=\"join-group\">\n          <Form.Label>\n            Are you interested in joining your neighborhood mutual aid pod or\n            need assistance in setting up your own mutual aid pod to support\n            yourself and your neighbors with current/ future needs? If so,\n            please go this link to join our Neighborhood Mutual Aid Pods Group:\n            tinyurl.com/KCMutualAidPod\n          </Form.Label>\n          <Col sm={10}>\n            <Form.Check type=\"radio\" label=\"Yes\" name=\"join-group\" id=\"yes\" />\n            <Form.Check type=\"radio\" label=\"No\" name=\"join-group\" id=\"no\" />\n          </Col>\n        </Form.Group>\n\n        <Form.Group controlId=\"Question2\">\n          <Form.Label>\n            Is there anything else you would like us to know about resources you\n            can offer?\n          </Form.Label>\n          <p>\n            In the near future, we are considering expanding the types of mutual\n            aid we offer. These might include emotional support, household chore\n            assistance, childcare, dog walking, etc. Please note access details\n            when possible, like: are you able to be scent-free (\n            <a href=\"http://thinkbeforeyoustink.com/howtogofragrancefree.html\">\n              http://thinkbeforeyoustink.com/howtogofragrancefree.html\n            </a>\n            )? Can you speak several languages, or sign languages? Do you have a\n            wheelchair accessible van?\n          </p>\n          <Form.Control placeholder=\"Your answer\" />\n        </Form.Group>\n\n        {/* TODO show poster here */}\n\n        <Button onClick={() => console.log('hello world')} variant=\"primary\">\n          Submit\n        </Button>\n      </Form>\n    </React.Fragment>\n  );\n};\n\nexport default CreateRequestPage;\n","import _ from 'lodash';\nimport Home from '../home/Home';\nimport GetHelp from '../get-help/GetHelp';\nimport Volunteer from '../volunteer/Volunteer';\nimport MyRequests from '../manage-requests/manage-request-page/ManageRequests';\nimport CreateRequestPage from '../manage-requests/create-request-page/CreateRequestPage';\n\nconst PUBLIC_NAV_STATE = {\n  'create-request': CreateRequestPage, // TODO: remove this\n  'get-help': GetHelp,\n  home: Home,\n  volunteer: Volunteer,\n};\n\n// TODO: handle full nav state here\nconst PROTECTED_NAV_STATE = {\n  'create-request': CreateRequestPage,\n};\n\nexport function getDisplayComponentForNav(state, { navId, subNavId }) {\n  const navState = _.defaultTo(subNavId, navId);\n  if (state.auth.hasLogin) {\n    return PROTECTED_NAV_STATE[navState] || MyRequests;\n  } else {\n    return PUBLIC_NAV_STATE[navState] || Home;\n  }\n}\n","import React from 'react';\n\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Navbar from '../navbar/Navbar';\nimport Breadcrumbs from '../breadcrumbs/Breadcrumbs';\nimport GlobalModals from '../global-modals/GlobalModals';\nimport { withRouter } from 'react-router';\nimport * as navManager from '../navbar/nav-manager';\n\nconst AppRoot = ({ component }) => (\n  <div>\n    <GlobalModals />\n    <Navbar />\n    {/* TODO: hide breadcrumbs for protected route */}\n    <Breadcrumbs />\n    <Route path=\"/:navId?/:subNavId?\" component={component}></Route>\n  </div>\n);\n\nconst mapStateToProps = (state, props) => {\n  const params = props.match.params;\n\n  return {\n    component: navManager.getDisplayComponentForNav(state, params),\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(AppRoot));\n","const loginModalReducers = (state = {}, action) => {\n  const newState = { ...state };\n  switch (action.type) {\n    case 'OPEN_LOGIN_MODAL':\n      newState['show'] = true;\n      return newState;\n    case 'HIDE_LOGIN_MODAL':\n      newState['show'] = false;\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default loginModalReducers;\n","const authReducers = (state = { hasLogin: false }, action) => {\n  const newState = { ...state };\n  switch (action.type) {\n    case 'SUCCESSFULLY_LOG_IN':\n      newState['hasLogin'] = true;\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default authReducers;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport globalModals from '../components/global-modals/login/login-modal.reducers';\nimport auth from '../apis/auth/auth.reducers';\n\nconst appReducers = combineReducers({\n  auth,\n  globalModals,\n});\n\nconst store = createStore(appReducers, applyMiddleware(logger));\nexport default store;\n","import React from 'react';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport AppRoot from './components/root/AppRoot';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport store from './store';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Route path=\"/:navId?/:subNavId?\" component={AppRoot}></Route>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}